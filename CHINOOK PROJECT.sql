REVENUE ANALYSIS
--WHAT IS THE TOTAL REVENUE GENERATED BY THE BUSINESS?

SELECT SUM(total) AS TOTAL_REVENUE
FROM invoice;

--WHAT IS THE MONTHLY REVENUE TREND FOR THE PAST YEAR?

SELECT date_format(InvoiceDate,'%Y-%m') AS Month, sum(total) AS Monthly_Revenue
FROM invoice
WHERE date_format(InvoiceDate,'%Y-%m') between '2023-01' AND '2023-12'
GROUP BY 1
ORDER BY Month;

--WHICH COUNTRY GENERATES THE HIGHTEST REVENUE?

SELECT Billingcountry, SUM(total) AS Total_Revenue 
FROM invoice
GROUP BY 1
ORDER BY 2 DESC
LIMIT 1;

--WHAT PERCENTAGE OF TOTAL REVENUE COMES FROM THE TOP 3 COUNTRIES?

WITH top3 AS (SELECT Billingcountry,sum(Total) AS Country_Revenue
FROM invoice
GROUP BY 1
ORDER BY 2 DESC
LIMIT 3),
total AS (SELECT sum(Total) AS Total_Revenue
FROM invoice)
SELECT SUM(ROUND((top3.Country_Revenue/total.Total_Revenue)*100,2)) AS Top3_percentage
FROM  top3,total;


SALES INSIGHTS 

--What are the top 5 genres based on sales volume?

SELECT g.name Genre_Name,g.genreid Genre_Id, SUM(il.Quantity) Sales_Volume
FROM genre g 
JOIN TRACK t ON t.genreid=g.genreid
JOIN invoiceline il ON il.trackid=t.trackid
GROUP BY 1,2
ORDER BY 3 DESC 
LIMIT 5;

--What are the top most purchased tracks?

SELECT t.trackid Track_ID,t.name Name, COUNT(il.Quantity) Quantity_Sold
FROM track t
JOIN invoiceline il ON il.TrackId=t.TrackId
GROUP BY 1,2 
ORDER BY 3 DESC,2 
LIMIT 15;

--Which albums generate the most revenue?

SELECT a.AlbumId Album_ID,a.Title Album_Title,SUM(i.Total)  Album_Revenue
FROM album a 
JOIN track t ON a.albumid=t.albumid
JOIN invoiceline il ON il.TrackId=t.TrackId
JOIN invoice i ON i.InvoiceId=il.InvoiceId
GROUP BY 1,2
ORDER BY 3 DESC
LIMIT 15;

--What is the sales distribution across different media types?

SELECT md.Name Name, md.MediaTypeId ID, SUM(il.Quantity) Sales_per_mediatype
FROM mediatype md 
JOIN track t ON t.MediaTypeId=md.MediaTypeId
JOIN invoiceline il ON il.TrackId=t.TrackId
GROUP BY 1,2
ORDER BY 3 DESC; 

--Which track has the highest unit sales but the lowest total revenue?
 
SELECT t.trackid Track_ID,t.name Track_Name,SUM(il.quantity) amt,SUM(i.total) revenue
FROM track t 
JOIN invoiceline il ON il.trackid=t.trackid
JOIN invoice i ON i.invoiceid=il.invoiceid
GROUP BY 1,2
ORDER BY 3 DESC,4 ASC 
LIMIT 1;


CUSTOMERS ANALYSIS 
--Who are the top 10 customers by the total spending?

SELECT c.customerid Customer_ID ,c.firstname First_Name ,c.lastname Last_Name, SUM(il.quantity*il.unitprice) AS Amt_Spent
FROM customer c
JOIN invoice i ON c.customerid=i.customerid
JOIN invoiceline il ON il.invoiceid=i.invoiceid
GROUP BY 1,2,3
ORDER BY 4 DESC
LIMIT 10;

--What is the average revenue per customer?

SELECT avg(Amt_Spent) Average_REV_CUST 
FROM(SELECT c.customerid,c.firstname,c.lastname, SUM(i.Total) AS Amt_Spent
FROM customer c
JOIN invoice i ON c.customerid=i.customerid
GROUP BY 1,2,3)sub;

--Which customers have made the most purchases?

SELECT c.CustomerId Customer_ID ,CONCAT(c.FirstName,' ',c.LastName) AS Customer_Name, COUNT(InvoiceId) Num_Purchases
FROM customer c
join invoice  i ON c.CustomerId=i.customerid
GROUP BY 1,2 
ORDER BY 3 DESC;

--What is the total revenue generated from each country?

SELECT c.Country COUNTRY, SUM(i.total) Total_Revenue
FROM customer c
JOIN invoice i ON i.CustomerId=c.CustomerId
GROUP BY 1
ORDER BY 2 DESC;

--Categorize customers based on their total spending

SELECT c.customerid,CONCAT(c.firstname,' ',c.lastname) AS Customer_Name,SUM(il.quantity*il.unitprice) AS Total_Spending,
 CASE WHEN SUM(il.quantity*il.unitprice)<30 THEN 'Low' WHEN SUM(il.quantity*il.unitprice)>40 THEN 'High' ELSE 'Medium' END AS Spending_Category
FROM customer c 
JOIN invoice i ON c.CustomerId=i.CustomerId
JOIN invoiceline il ON il.InvoiceId=i.InvoiceId
GROUP BY 1,2;


ARTISTS PERFORMANCE 

--What are the top 5 artists based on revenue genertared?

SELECT art.artistid Artist_ID,art.name Artist_Name, SUM(i.total) Revenue_Generated
FROM artist art
JOIN album a ON a.artistid=art.artistid
JOIN track t ON t.albumid=a.albumid
JOIN invoiceline il ON il.trackid=t.trackid
JOIN invoice i ON i.invoiceid=il.invoiceid
GROUP BY 1,2
ORDER BY 3 DESC 
LIMIT 5;

--What is the revenue contribution of each artist as a percentage of the total revenue?

WITH Artist_Rev AS (SELECT art.artistid Artist_ID,art.name Artist_Name, SUM(i.total) Revenue_Generated
FROM artist art
JOIN album a ON a.artistid=art.artistid
JOIN track t ON t.albumid=a.albumid
JOIN invoiceline il ON il.trackid=t.trackid
JOIN invoice i ON i.invoiceid=il.invoiceid
GROUP BY 1,2),
Total_Rev AS (SELECT SUM(total) Total_Revenue
FROM invoice)
SELECT Artist_Rev.Artist_ID, Artist_Rev.ARTIST_Name, Artist_Rev.Revenue_Generated,
 ROUND((Artist_Rev.Revenue_Generated/Total_Rev.Total_Revenue)*100,2) Contribution_perentage
 FROM Artist_Rev,Total_Rev
 ORDER BY 4 DESC;
 
 --What artistâ€™s album sell the most in terms of quantity?
 
SELECT art.name Artist_Name,a.title Album_title, SUM(il.quantity) Album_Sales
FROM artist art
JOIN album a ON a.artistid=art.artistid
JOIN track t ON t.albumid=a.albumid
JOIN invoiceline il ON il.trackid=t.trackid
GROUP BY 1,2
ORDER BY 3 DESC 
LIMIT 1;

EMPLOYEES & STORES ANALYSIS

--Which sales agent generates the most revenue?

SELECT e.employeeid,CONCAT(e.firstname,' ',e.lastname) Employee_Name,SUM(i.total) Total_revenuve
FROM employee e
JOIN customer c ON e.EmployeeId=c.SupportRepId
JOIN invoice i ON i.customerid=c.customerid
GROUP BY 1,2
ORDER BY 3 DESC
LIMIT 1;
 
 --What is the average invoice size for each sales agent?
 
 SELECT Employee_ID, ROUND(AVG(invoice_size),0)
 FROM(SELECT e.EmployeeId Employee_ID,COUNT(i.invoiceid) invoice_size
 FROM employee e
 JOIN customer c ON e.employeeid=c.supportrepid
 JOIN invoice i ON i.customerid=c.customerid
 GROUP BY 1 )sub
 GROUP BY 1;
 
 --Which sales city generates the most revenue?
 
 SELECT e.city,SUM(i.total) Revenue
 FROM employee e 
 JOIN customer c ON e.EmployeeId=c.SupportRepId
 JOIN invoice i ON i.CustomerId=c.CustomerId
 GROUP BY 1
 ORDER BY 2 DESC
 LIMIT 1;
 
--Rank employees by the total revenue genertated

SELECT Employee_ID,Employee_Name,Revenue, RANK() OVER(ORDER BY Revenue DESC) AS RANKING
FROM(SELECT e.employeeid Employee_ID,CONCAT(e.firstname,' ',e.lastname) Employee_Name,e.Title,SUM(i.total) Revenue
FROM employee e
JOIN customer c ON e.EmployeeId=c.SupportRepId
JOIN invoice i ON i.CustomerId=c.CustomerId
GROUP BY 1,2)sub;



















